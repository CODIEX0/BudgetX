<Application x:Class="ST10092081POEBudgetApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ST10092081POEBudgetApp"
             xmlns:viewModel="clr-namespace:ST10092081POEBudgetApp.MVM.ViewModel"
             xmlns:view="clr-namespace:ST10092081POEBudgetApp.MVM.View"
             StartupUri="SignInPage.xaml">
    
    <Application.Resources>        
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Theme/MenuButtonTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            
            <DataTemplate DataType="{x:Type viewModel:MenuViewModel}">
                <view:MenuView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:RentPropertyViewModel}">
                <view:RentPropertyView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:HomeLoanViewModel}">
                <view:HomeLoanView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:VehiclePurchaseViewModel}">
                <view:VehiclePurchaseView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:SavingsViewModel}">
                <view:SavingsView/>
            </DataTemplate>

            <Style x:Key="titleText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="36"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="#FFB2D9FF"/>
            </Style>

            <Style x:Key="normalText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="LineHeight" Value="28"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </Style> 

            <Style x:Key="textHint" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="Margin" Value="10 0 0 0"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="textBox" TargetType="TextBox">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Margin" Value="10 0 0 0"/>
                <Setter Property="Foreground" Value="#878787"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <Style x:Key="mainButton" TargetType="Button">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="Width" Value="170"/>
                <Setter Property="Margin" Value="0 20 0 0"/>
                <Setter Property="Background" Value="#FF255685"/>
                <Setter Property="Foreground" Value="#FFB2D9FF"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="#FF012344" Padding="15">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF4B9DED"/>
                        <Setter Property="Foreground" Value="#FF255685"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="#FF0E243A"/>
                        <Setter Property="Foreground" Value="#FFB2D9FF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DisplayComboBox" TargetType="ComboBox">
                <Setter Property="Text" Value="Display Options"/>
                <Setter Property="Width" Value="210"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Background" Value="#FF2D61D0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#FF070242"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="Foreground" Value="#FF010D29"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF070242"/>
                        <Setter Property="Foreground" Value="#FF2D61D0"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="#FF010D29"/>
                        <Setter Property="Foreground" Value="#FF2D61D0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="imgClose" TargetType="Image">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="0 13 13 0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    
                </Style.Triggers>
            </Style>

            <Style x:Key="ExitBottunStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="DimGray"/>
                <Setter Property="BorderBrush" Value="DimGray"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="25" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="Red"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="Red"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>                        

        </ResourceDictionary> 
    </Application.Resources>
</Application>
